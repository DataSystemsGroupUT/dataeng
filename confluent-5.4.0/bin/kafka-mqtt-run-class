#!/usr/bin/env bash

# (Copyright) [2018 - 2018] Confluent, Inc.

base_dir=$(cd "$(dirname $0)/..";pwd)

# Development jars. `mvn package` should collect all the required dependency jars here
for dir in "$base_dir/target/kafka-mqtt-*-development"; do
  expanded_dir=$( echo ${dir} )
  if [ -d "${expanded_dir}" ]; then
    classpath_prefix="$CLASSPATH:"
    if [ "x$CLASSPATH" = "x" ]; then
      classpath_prefix=""
    fi
    CLASSPATH="$classpath_prefix:$expanded_dir/share/java/kafka-mqtt/*"
  fi
done

# Production jars
for library in "confluent-common" "confluent-kafka-mqtt" "monitoring-interceptors"; do
  CLASSPATH=$CLASSPATH:$base_dir/share/java/$library/*
done

# logj4 settings
if [ "x$KAFKA_MQTT_LOG4J_OPTS" = "x" ]; then
  # Test for files from dev -> packages so this will work as expected in dev if you have packages
  # installed
  LOG4J_CONFIG_RPM_DEB_INSTALL="/etc/confluent-kafka-mqtt/log4j.properties"
  LOG4J_CONFIG_ARCHIVE_INSTALL="$base_dir/etc/confluent-kafka-mqtt/log4j.properties"
  LOG4J_CONFIG_DEV_INSTALL="$base_dir/config/log4j.properties"
  if [ -e "${LOG4J_CONFIG_DEV_INSTALL}" ]; then # dev environment
    KAFKA_MQTT_LOG4J_OPTS="-Dlog4j.configuration=file:$LOG4J_CONFIG_DEV_INSTALL"
  elif [ -e "${LOG4J_CONFIG_ARCHIVE_INSTALL}" ]; then # archive layout
    KAFKA_MQTT_LOG4J_OPTS="-Dlog4j.configuration=file:$LOG4J_CONFIG_ARCHIVE_INSTALL"
  elif [ -e "${LOG4J_CONFIG_RPM_DEB_INSTALL}" ]; then # rpm/deb install layout
    KAFKA_MQTT_LOG4J_OPTS="-Dlog4j.configuration=file:$LOG4J_CONFIG_RPM_DEB_INSTALL"
  fi
fi

if [[ -n ${LOG_DIR} ]]; then
    [[ -d ${LOG_DIR} ]] || mkdir -p "$LOG_DIR"
    KAFKA_MQTT_LOG4J_OPTS="-Dkafka-mqtt.log.dir=$LOG_DIR ${KAFKA_MQTT_LOG4J_OPTS}"
else
    KAFKA_MQTT_LOG4J_OPTS="-Dkafka-mqtt.log.dir=. ${KAFKA_MQTT_LOG4J_OPTS}"
fi
export KAFKA_MQTT_LOG4J_OPTS

# Generic jvm settings you want to add
if [ -z "$KAFKA_MQTT_OPTS" ]; then
  KAFKA_MQTT_OPTS=""
fi

# Set Debug options if enabled
if [ "x$KAFKA_MQTT_DEBUG" != "x" ]; then
  # Use default ports
  DEFAULT_JAVA_DEBUG_PORT="5005"
  if [ -z "$JAVA_DEBUG_PORT" ]; then
    JAVA_DEBUG_PORT="$DEFAULT_JAVA_DEBUG_PORT"
  fi

  # Use the defaults if JAVA_DEBUG_OPTS was not set
  DEFAULT_JAVA_DEBUG_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=${DEBUG_SUSPEND_FLAG:-n},address=$JAVA_DEBUG_PORT"
  if [ -z "$JAVA_DEBUG_OPTS" ]; then
    JAVA_DEBUG_OPTS="$DEFAULT_JAVA_DEBUG_OPTS"
  fi

  echo "Enabling Java debug options: $JAVA_DEBUG_OPTS"
  KAFKA_MQTT_OPTS="$JAVA_DEBUG_OPTS $KAFKA_MQTT_OPTS"
fi

# Which java to use
if [ -z "$JAVA_HOME" ]; then
  JAVA="java"
else
  JAVA="$JAVA_HOME/bin/java"
fi

# Memory options
if [ -z "$KAFKA_MQTT_HEAP_OPTS" ]; then
  KAFKA_MQTT_HEAP_OPTS="-Xmx256M"
fi

# JVM performance options
if [ -z "$KAFKA_MQTT_JVM_PERFORMANCE_OPTS" ]; then
  KAFKA_MQTT_JVM_PERFORMANCE_OPTS="-server -Djava.awt.headless=true"
fi

MAIN=$1
shift

while [ $# -gt 0 ]; do
  COMMAND=$1
  case $COMMAND in
    -help)
      HELP="true"
      shift
      ;;
    -daemon)
      DAEMON_MODE="true"
      shift
      ;;
    *)
      break
      ;;
  esac
done

if [ "x$HELP" = "xtrue" ]; then
  usage
fi

# Launch mode
if [ "x$DAEMON_MODE" = "xtrue" ]; then
nohup $JAVA $KAFKA_MQTT_HEAP_OPTS $KAFKA_MQTT_JVM_PERFORMANCE_OPTS $KAFKA_MQTT_JMX_OPTS $KAFKA_MQTT_LOG4J_OPTS -cp $CLASSPATH $KAFKA_MQTT_OPTS "$MAIN" "$@" 2>&1 < /dev/null &
else
  exec $JAVA $KAFKA_MQTT_HEAP_OPTS $KAFKA_MQTT_JVM_PERFORMANCE_OPTS $KAFKA_MQTT_JMX_OPTS $KAFKA_MQTT_LOG4J_OPTS -cp $CLASSPATH $KAFKA_MQTT_OPTS "$MAIN" "$@"
fi

usage() {
    echo "USAGE: $0 [-daemon] [opts] [-help] kafka-mqtt.properties"
    exit 0
}
